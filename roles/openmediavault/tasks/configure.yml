- name: Install node exporter
  block:
    - name: Create a node exporter user
      ansible.builtin.user:
        name: metrics
        create_home: true
        shell: /bin/rbash # Restricted shell
    - name: Identify material architecture # noqa: no-changed-when
      ansible.builtin.command: "dpkg --print-architecture"
      register: arch
    - name: Download binary # noqa: yaml[line-length]
      ansible.builtin.get_url:
        dest: /home/metrics
        mode: "0755"
        owner: metrics
        group: metrics
        url:
          "https://github.com/prometheus/node_exporter/releases/download/v{{ common_node_exporter_version }}\
          /node_exporter-{{ common_node_exporter_version }}.linux-{{ arch.stdout }}.tar.gz"
    - name: Decompress archive
      ansible.builtin.unarchive:
        src: /home/metrics/node_exporter-{{ common_node_exporter_version }}.linux-{{ arch.stdout }}.tar.gz
        remote_src: true
        dest: /home/metrics/
    - name: Move binary
      ansible.builtin.copy:
        dest: /usr/bin/node_exporter
        src: /home/metrics/node_exporter-{{ common_node_exporter_version }}.linux-{{ arch.stdout }}/node_exporter
        remote_src: true
        mode: "0755"
    - name: Create systemd conf file
      ansible.builtin.template:
        src: templates/node-exporter.service.j2
        dest: /etc/systemd/system/node-exporter.service
        mode: "0755"
    - name: Create node-exporter web config
      ansible.builtin.template:
        src: templates/node-exporter.web.config.j2
        dest: /home/metrics/node-exporter.web.config
        mode: "0750"
        owner: metrics
        group: metrics
    - name: Enable and start service
      ansible.builtin.systemd_service:
        state: restarted
        daemon_reload: true
        enabled: true
        name: node-exporter

- name: Install additional utils packages
  ansible.builtin.apt:
    pkg:
      - console-data

- name: Install OMV Plugins
  ansible.builtin.apt:
    pkg:
      - openmediavault-md
      - openmediavault-k8s
      - openmediavault-clamav
      - openmediavault-filebrowser
      - openmediavault-sharerootfs

# RAID confiuration
- name: Check if RAID 5 array already exists
  ansible.builtin.command:
    cmd: omv-sysinfo 30-mdadm
  register: array

- name: Create RAID 5 volume
  ansible.builtin.command:
    cmd: omv-mkraid /dev/md0 -l 5 -n 3 {{ raid5_devices | join(' ') }}
  when: 'raid5_devices is defined and "/dev/md0" not in array.stdout[0]'

# HTTPS configuration
- name: SSL configuration
  block:
    - name: Copy SSL intermediary certificate
      ansible.builtin.copy:
        dest: /etc/ssl/certs/omv-intermediary.crt
        content: "{{ ssl_intermediary_cert }}"
        owner: root
        mode: "0644"

    - name: Copy SSL intermediary key
      ansible.builtin.copy:
        dest: /etc/ssl/private/omv-intermediary.key
        content: "{{ ssl_intermediary_key }}"
        owner: root
        mode: "0600"

    - name: Copy leaf certs generation script
      ansible.builtin.copy:
        src: ./files/generate-leaf-from-intermediary.sh
        dest: /usr/local/bin/generate-leaf-from-intermediary
        owner: root
        mode: "0755"

    - name: Generate leaf certificate
      ansible.builtin.command:
        argv:
          - generate-leaf-from-intermediary

    - name: Get leaf cert content
      ansible.builtin.slurp:
        src: /etc/ssl/certs/omv.crt
      register: leaf_cert_content

    - name: Copy SSL certificate full chain
      ansible.builtin.copy:
        dest: /etc/ssl/certs/omv-chain.crt
        content: "{{ leaf_cert_content.content | b64decode }}{{ ssl_intermediary_cert }}{{ ca_cert }}"
        owner: root
        mode: "0644"

    - name: Copy update script
      ansible.builtin.copy:
        src: ./files/omv-ssl-update-certs.sh
        dest: /usr/local/bin/omv-ssl-update-certs
        owner: root
        mode: "0755"

    - name: Update SSL certs
      ansible.builtin.command:
        argv:
          - omv-ssl-update-certs

    - name: Generate kube CA secret manifest
      ansible.builtin.template:
        src: templates/ca-omv-cluster.yml.j2
        dest: /etc/ssl/private/ca-omv-cluster.yml
        mode: "0600"
        owner: root
        group: root

- name: Redirect sub domains to k3s Load balancer
  block:
    - name: Install Nginx stream module
      ansible.builtin.apt:
        pkg:
          - libnginx-mod-stream
    - name: Alter OMV Nginx Conf > IP v4 to 127.0.0.1:444
      ansible.builtin.lineinfile:
        path: /etc/nginx/sites-available/openmediavault-webgui
        regexp: ".*\\*:443.*"
        line: "    listen 127.0.0.1:444 default_server http2 ssl deferred;"
    - name: Alter OMV Nginx Conf > IP v6 to  [::1]:444
      ansible.builtin.lineinfile:
        path: /etc/nginx/sites-available/openmediavault-webgui
        regexp: ".*\\[::\\]:443.*"
        line: "    listen [::1]:444 default_server http2 ssl deferred;"
    - name: Create stream configuration
      ansible.builtin.template:
        src: templates/k3s-tcp-stream.conf.j2
        dest: /etc/nginx/k3s-tcp-stream.conf
        mode: "0644"
        owner: root
        group: root
    - name: Include stream configuration in Main conf
      ansible.builtin.lineinfile:
        path: /etc/nginx/nginx.conf
        insertafter: "include /etc/nginx/modules-enabled/\\*.conf;"
        line: "include /etc/nginx/k3s-tcp-stream.conf;"
    - name: Restart Nginx
      ansible.builtin.systemd_service:
        state: restarted
        daemon_reload: true
        enabled: true
        name: nginx

- name: Set discord notifications
  when: webhook_url is defined
  block:
    - name: Install curl
      ansible.builtin.apt:
        pkg:
          - curl
    - name: Copy script
      ansible.builtin.template:
        src: templates/20discord.j2
        dest: /usr/share/openmediavault/notification/sink.d/20discord
        mode: "0755"
        owner: root
        group: root

- name: Set scheduled archiving for Saved Persistent Volume Claims
  block:
    - name: Install tooling
      ansible.builtin.apt:
        pkg:
          - lbzip2
    - name: Copy archive password
      ansible.builtin.template:
        src: templates/archiving_password.j2
        dest: /root/.archive_password
        owner: root
        group: root
        mode: "0600"
    - name: Copy archiving script
      ansible.builtin.copy:
        src: ./files/k3s-archive-saved-pvc.sh
        dest: /usr/local/bin/k3s-archive-saved-pvc
        owner: root
        group: root
        mode: "0500"
    - name: Copy unused PVC listing script
      ansible.builtin.copy:
        src: ./files/k3s-list-unused-pvc.sh
        dest: /usr/local/bin/k3s-list-unused-pvc
        owner: root
        group: root
        mode: "0500"
