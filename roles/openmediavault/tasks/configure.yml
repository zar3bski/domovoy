
- name: Install node exporter
  block:
    - name: Create a node exporter user
      ansible.builtin.user:
        name: metrics
        create_home: true
        shell: /bin/rbash  # Restricted shell
    - name: Identify material architecture # noqa: no-changed-when
      ansible.builtin.command: "dpkg --print-architecture"
      register: arch
    - name: Download binary # noqa: yaml[line-length]
      ansible.builtin.get_url:
        dest: /home/metrics
        mode: '0755'
        owner: metrics
        group: metrics
        url: "https://github.com/prometheus/node_exporter/releases/download/v{{ common_node_exporter_version }}\
              /node_exporter-{{ common_node_exporter_version }}.linux-{{ arch.stdout }}.tar.gz"
    - name: Decompress archive
      ansible.builtin.unarchive:
        src: /home/metrics/node_exporter-{{ common_node_exporter_version }}.linux-{{ arch.stdout }}.tar.gz
        remote_src: true
        dest: /home/metrics/
    - name: Move binary
      ansible.builtin.copy:
        dest: /usr/bin/node_exporter
        src: /home/metrics/node_exporter-{{ common_node_exporter_version }}.linux-{{ arch.stdout }}/node_exporter
        remote_src: true
        mode: "0755"
    - name: Create systemd conf file
      ansible.builtin.template:
        src: templates/node-exporter.service.j2
        dest: /etc/systemd/system/node-exporter.service
        mode: '0755'
    - name: Create node-exporter web config
      ansible.builtin.template:
        src: templates/node-exporter.web.config.j2
        dest: /home/metrics/node-exporter.web.config
        mode: '0750'
        owner: metrics
        group: metrics
    - name: Enable and start service
      ansible.builtin.systemd_service:
        state: restarted
        daemon_reload: true
        enabled: true
        name: node-exporter

# TODO: allow node exporter port

- name: Install Plugins
  ansible.builtin.apt:
    pkg:
      - openmediavault-md
      - openmediavault-k8s
      - openmediavault-clamav
      - openmediavault-filebrowser

# RAID confiuration
- name: Check if RAID 5 array already exists
  ansible.builtin.command:
    cmd: omv-sysinfo 30-mdadm
  register: array

- name: Create RAID 5 volume
  ansible.builtin.command:
    cmd: omv-mkraid /dev/md0 -l 5 -n 3 {{ raid5_devices | join(' ') }}
  when: 'raid5_devices is defined and "/dev/md0" not in array.stdout[0]'


# HTTPS configuration
- name: SSL configuration
  block:
    - name: Copy SSL certificate
      ansible.builtin.copy:
        dest: /etc/ssl/certs/omv.crt
        content: "{{ ssl_cert }}"
        owner: root
        mode: '0644'

    - name: Copy SSL key
      ansible.builtin.copy:
        dest: /etc/ssl/private/omv.key
        content: "{{ ssl_key }}"
        owner: root
        mode: '0600'

    - name: Copy update script
      ansible.builtin.copy:
        src: ./files/omv-ssl-update-certs.sh
        dest: /usr/local/bin/omv-ssl-update-certs
        owner: root
        mode: '0755'
  
    - name: Update SSL certs
      ansible.builtin.command:
        argv:
          - omv-ssl-update-certs
          - 'CN={{ inventory_hostname }},signed'
