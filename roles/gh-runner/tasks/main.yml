- name: Create a gh-runner user
  ansible.builtin.user:
    name: gh-runner
    create_home: true
    shell: /bin/bash
    uid: 1005

- name: Install build dependencies
  block:
    - name: Install build packages
      ansible.builtin.apt:
        pkg:
          - build-essential
          - libssl-dev
          - pkg-config
    - name: Install rust # noqa: risky-shell-pipe noqa: no-changed-when
      ansible.builtin.shell: su - gh-runner -c "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y"
    - name: Add cargo bin to PATH
      ansible.builtin.lineinfile:
        path: /home/gh-runner/.bashrc
        line: export PATH="$HOME/.cargo/bin:$PATH"

- name: Identify material architecture # noqa: no-changed-when
  ansible.builtin.command: "dpkg --print-architecture"
  register: arch

- name: Download runner binary from official source
  ansible.builtin.get_url:
    dest: /home/gh-runner
    mode: '0755'
    owner: gh-runner
    group: gh-runner
    url: https://github.com/actions/runner/releases/download/v{{action_runner_version}}/actions-runner-linux-{{arch.stdout}}-{{action_runner_version}}.tar.gz


- name: Set runner for each repo 
  block: 
    - name: Create folder
      with_items: "{{ gh_runners }}"
      ansible.builtin.file:
        path: /home/gh-runner/{{item.name}}
        state: directory
        owner: gh-runner
        group: gh-runner
        mode: '0750'
    - name: Untar the archive
      with_items: "{{ gh_runners }}"
      ansible.builtin.unarchive:
        src: /home/gh-runner/actions-runner-linux-{{ arch.stdout }}-{{ action_runner_version }}.tar.gz
        dest: /home/gh-runner/{{item.name}}
        owner: gh-runner
        group: gh-runner
        copy: false
    - name: Execute config script
      with_items: "{{ gh_runners }}"
      ansible.builtin.shell: su - gh-runner -c "cd /home/gh-runner/{{item.name}} && ./config.sh --url {{item.url}} --token {{item.token}} --name {{item.name}} --labels {{item.labels}} --unattended || echo 'runner exists'"
    - name: Create systemd conf file
      with_items: "{{ gh_runners }}"
      ansible.builtin.template:
        src: templates/gh-runner.service.j2
        dest: /etc/systemd/system/gh-runner-{{item.name}}.service
        mode: '0755'
    - name: Enable and start service
      with_items: "{{ gh_runners }}"
      ansible.builtin.systemd_service:
        state: started
        daemon_reload: true
        enabled: true
        name: gh-runner-{{item.name}}
