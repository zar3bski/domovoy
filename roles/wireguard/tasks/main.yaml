- name: Install wireguard
  ansible.builtin.apt:
    pkg:
      - wireguard

- name: Create wireguard folder
  ansible.builtin.file:
    state: directory
    path: /etc/wireguard
    mode: "0600"

- name: Create wireguard helper folder
  ansible.builtin.file:
    state: directory
    path: /etc/wireguard/helper
    mode: "0600"

- name: Create wireguard shared conf folder
  ansible.builtin.file:
    state: directory
    path: /usr/share/wireguard
    mode: "0755"

- name: Setup wireguard
  block:
    - name: Copy private key
      with_items: "{{ wireguard.interfaces }}"
      ansible.builtin.template:
        src: templates/privatekey.j2
        dest: /etc/wireguard/{{ item.interface }}.privatekey
        mode: "0600"

    - name: Copy public key
      with_items: "{{ wireguard.interfaces }}"
      ansible.builtin.template:
        src: templates/publickey.j2
        dest: /etc/wireguard/{{ item.interface }}.publickey
        mode: "0600"

    - name: Copy public key
      with_items: "{{ wireguard.interfaces }}"
      ansible.builtin.template:
        src: templates/wg.conf.j2
        dest: /etc/wireguard/{{ item.interface }}.conf
        mode: "0600"

    - name: Create Peers shared mapping file
      with_items: "{{ wireguard.interfaces }}"
      ansible.builtin.template:
        src: templates/peers.j2
        dest: /usr/share/wireguard/{{ item.interface }}.peers
        mode: '0744'

    - name: Copy helper file 1
      ansible.builtin.template:
        src: templates/add-nat-routing.sh.j2
        dest: /etc/wireguard/helper/add-nat-routing.sh
        mode: "0700"

    - name: Copy helper file 2
      ansible.builtin.template:
        src: templates/remove-nat-routing.sh.j2
        dest: /etc/wireguard/helper/remove-nat-routing.sh
        mode: "0700"

    - name: Allow wireguard traffic to this host
      with_items: "{{ wireguard.interfaces }}"
      community.general.ufw:
        rule: allow
        proto: any
        port: '{{ item.WG_PORT }}'
        state: 'enabled'
      when: item.WG_PORT is defined

    - name: Start or restart Interface
      with_items: "{{ wireguard.interfaces }}"
      ansible.builtin.systemd:
        daemon_reload: true
        service: wg-quick@{{ item.interface }}
        enabled: true
        state: restarted

- name: Setup wireguard prometheus exporter
  block:
    - name: Download binary # noqa: yaml[line-length]
      ansible.builtin.get_url:
        dest: /usr/bin
        mode: '0755'
        owner: metrics
        group: metrics
        url: https://github.com/zar3bski/blobs/raw/refs/heads/main/binaries/aarch64/wireguard-prometheus-exporter/3.6.6/prometheus_wireguard_exporter
    - name: Allow wireguard trafic to the exporter
      community.general.ufw:
        rule: allow
        proto: tcp
        port: '9586'
    - name: Make sudo without password for metrics user
      ansible.builtin.copy:
        dest: /etc/sudoers.d/80-metrics-sudo-wg
        content: "metrics ALL=(root) NOPASSWD: /usr/bin/wg show all dump"
        mode: "0440"
    - name: Create systemd conf file
      ansible.builtin.template:
        src: templates/prometheus-wireguard-exporter.service.j2
        dest: /etc/systemd/system/prometheus-wireguard-exporter.service
        mode: '0555'
    - name: Start or restart the exporter
      ansible.builtin.systemd:
        daemon_reload: true
        service: prometheus-wireguard-exporter
        enabled: true
        state: restarted

- name: Set public IP tracking
  when: wireguard.public_ip_tracking is defined
  block:
    - name: Copy notification script
      ansible.builtin.template:
        src: templates/notify-public-ip-changes.sh.j2
        dest: /usr/bin/notify-public-ip-changes
        owner: root
        group: root
        mode: '0700'
    - name: Create Cron Job
      ansible.builtin.template:
        src: templates/notify-public-ip-changes.cron.j2
        dest: /etc/cron.d/notify-public-ip-changes
        owner: root
        group: root
        mode: '0500'
