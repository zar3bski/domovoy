- name: Gathering facts
  ansible.builtin.setup:

- name: Install docker
  block:
    - name: Install dependencies
      ansible.builtin.apt:
        pkg:
          - ca-certificates

    - name: Identify distro # noqa: no-changed-when
      ansible.builtin.shell: ". /etc/os-release && echo $VERSION_CODENAME"
      register: version

    - name: Identify arch # noqa: no-changed-when
      ansible.builtin.command: "dpkg --print-architecture"
      register: arch

    - name: Identify distro # noqa: no-changed-when
      ansible.builtin.shell: ". /etc/os-release && echo $ID"
      register: distro

    - name: Copy keyring
      ansible.builtin.get_url:
        dest: /etc/apt/keyrings/docker.asc
        mode: a+r
        url: https://download.docker.com/linux/ubuntu/gpg

    - name: Add docker repository # noqa: yaml[line-length]
      ansible.builtin.apt_repository:
        repo: "deb [arch={{ arch.stdout }} signed-by=/etc/apt/keyrings/docker.asc] \
               https://download.docker.com/linux/{{ distro.stdout }} {{ version.stdout }} stable"
        state: present
        filename: docker

    - name: Install docker
      ansible.builtin.apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin


- name: Install docker
  ansible.builtin.apt:
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin

- name: Pull technitium image
  community.docker.docker_image:
    name: technitium/dns-server:{{technitium_image_tag}}
    source: pull

- name: Disable systemd-resolved
  ansible.builtin.systemd_service:
    state: stopped
    daemon_reload: true
    enabled: false
    name: systemd-resolved

- name: Drop symlink to /run/systemd/resolve/stub-resolv.conf
  ansible.builtin.file:
    path: "/etc/resolv.conf"
    state: absent

- name: Create systemd config file
  ansible.builtin.template:
    src: templates/technitium.service.j2
    dest: /etc/systemd/system/technitium.service
    mode: '0700'

- name: Set system's DNS servers globally 
  ansible.builtin.lineinfile:
    path: "/etc/resolv.conf"
    line: 'nameserver {{ item }}'
    create: true
    state: present
    owner: root
    group: root
    mode: '0644'
  loop:
    - "{{ ansible_facts['default_ipv4']['address'] }}"
    - "8.8.8.8"

- name: Allow IN ipv4 and ipv6 to 53
  community.general.ufw:
    rule: allow
    port: 53
    
- name: Enable and start service
  ansible.builtin.systemd_service:
    state: restarted
    daemon_reload: true
    enabled: true
    name: technitium.service
