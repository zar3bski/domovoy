- name: Gathering facts
  ansible.builtin.setup:

- name: Update repositories cache
  ansible.builtin.apt:
    update_cache: true

- name: Upgrade packages
  ansible.builtin.apt:
    upgrade: safe

- name: Install common packages
  ansible.builtin.apt:
    pkg:
      - ufw
      - htop
      - acl

- name: Allow SSH inbound trafic
  community.general.ufw:
    rule: limit
    port: ssh
    proto: tcp
  when: knock_ports is not defined

- name: Set port knocking for SSH inbound trafic
  when: knock_ports is defined
  block:
    - name: Install knockd
      ansible.builtin.apt:
        pkg:
          - knockd
    - name: Edit conf file
      ansible.builtin.template:
        src: templates/knockd.conf.j2
        dest: /etc/knockd.conf
        mode: '0755'
    - name: Enable START_KNOCKD
      ansible.builtin.replace:
        path: /etc/default/knockd
        regexp: '^START_KNOCKD=\d$'
        replace: START_KNOCKD=1
    - name: Set Interface
      ansible.builtin.replace:
        path: /etc/default/knockd
        regexp: '^#KNOCKD_OPTS="-i \w+"$'
        replace: KNOCKD_OPTS="-i {{ ansible_default_ipv4.interface }}"
    - name: Enable and start service
      ansible.builtin.systemd_service:
        state: started
        daemon_reload: true
        enabled: true
        name: knockd.service

- name: Install node exporter
  block:
    - name: Create a nym user
      ansible.builtin.user:
        name: metrics
        create_home: true
        shell: /bin/rbash  # Restricted shell
    - name: Identify material architecture # noqa: no-changed-when
      ansible.builtin.command: "dpkg --print-architecture"
      register: arch
    - name: Download binary # noqa: yaml[line-length]
      ansible.builtin.get_url:
        dest: /home/metrics
        mode: '0755'
        owner: metrics
        group: metrics
        url: https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-{{ arch.stdout }}.tar.gz
    - name: Decompress archive
      ansible.builtin.unarchive:
        src: /home/metrics/node_exporter-{{ node_exporter_version }}.linux-{{ arch.stdout }}.tar.gz
        remote_src: true
        dest: /home/metrics/
    - name: Move binary
      ansible.builtin.copy:
        dest: /usr/bin/node_exporter
        src: /home/metrics/node_exporter-{{ node_exporter_version }}.linux-{{ arch.stdout }}/node_exporter
        remote_src: true
        mode: "0755"
    - name: Create systemd conf file
      ansible.builtin.template:
        src: templates/node-exporter.service.j2
        dest: /etc/systemd/system/node-exporter.service
        mode: '0755'
    - name: Create node-exporter web config
      ansible.builtin.template:
        src: templates/node-exporter.web.config.j2
        dest: /home/metrics/node-exporter.web.config
        mode: '0750'
        owner: metrics
        group: metrics
    - name: Allow inbound trafic to node_exporter
      community.general.ufw:
        rule: limit
        port: 9100
        proto: tcp
    - name: Enable and start service
      ansible.builtin.systemd_service:
        state: restarted
        daemon_reload: true
        enabled: true
        name: node-exporter

- name: Set additional SSH keys
  when: ssh_keys is defined
  ansible.builtin.lineinfile:
    path: "/home/{{ ansible_env.SUDO_USER }}/.ssh/authorized_keys"
    line: '{{ item }}'
  loop: "{{ ssh_keys | list }}"

- name: Set logging
  community.general.ufw:
    state: enabled
    logging: 'on'
